<?php

namespace AppBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * RegistroHorasRepository.
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RegistroHorasRepository extends EntityRepository
{
    /**
     * MÃ©todo que devuleve los registros de un Proyecto.
     *
     * @param ProyectoPresupuesto $proyecto
     *
     * @return RegistroHoras
     */
    public function findByProyecto($proyecto)
    {
        $em = $this->getEntityManager();
        $qb = $em->createQueryBuilder();
        $qb
            ->select('registro')
            ->from('AppBundle:RegistroHoras', 'registro')
            ->Where('registro.proyectoPresupuesto = :proyecto')
            ->setParameter('proyecto', $proyecto);

        return $qb->getQuery()->getResult();
    }

    public function findByFechaAndUsuario($fechaInicio, $fechaFinal, $usuario)
    {
        $em = $this->getEntityManager();
        $qb = $em->createQueryBuilder();
        $qb
            ->select('registro')
            ->from('AppBundle:RegistroHoras', 'registro')
            ->Where('registro.fechaHoras >= :fechaInicio')
            ->andWhere('registro.fechaHoras <= :fechaFinal')
            ->andWhere('registro.ingresadoPor = :usuario')
            ->setParameter('fechaInicio', $fechaInicio)
            ->setParameter('fechaFinal', $fechaFinal)
            ->setParameter('usuario', $usuario);

        return $qb->getQuery()->getResult();
    }
    public function findByFechaAndUsuarioExtra($fechaInicio, $fechaFinal, $usuario, $extra)
    {
        $em = $this->getEntityManager();
        $qb = $em->createQueryBuilder();
        $qb
            ->select('registro')
            ->from('AppBundle:RegistroHoras', 'registro')
            ->Where('registro.fechaHoras >= :fechaInicio')
            ->andWhere('registro.fechaHoras <= :fechaFinal')
            ->andWhere('registro.ingresadoPor = :usuario')
            ->andWhere('registro.horasExtraordinarias = :extra')
            ->setParameter('fechaInicio', $fechaInicio)
            ->setParameter('fechaFinal', $fechaFinal)
            ->setParameter('usuario', $usuario)
            ->setParameter('extra', $extra);

        return $qb->getQuery()->getResult();
    }

    public function findByFechaAndClienteExtra($fechaInicio, $fechaFinal, $cliente, $extra)
    {
        $em = $this->getEntityManager();
        $qb = $em->createQueryBuilder();
        $qb
            ->select('registro')
            ->from('AppBundle:RegistroHoras', 'registro')
            ->Where('registro.fechaHoras >= :fechaInicio')
            ->andWhere('registro.fechaHoras <= :fechaFinal')
            ->andWhere('registro.cliente = :cliente')
            ->andWhere('registro.horasExtraordinarias = :extra')
            ->setParameter('fechaInicio', $fechaInicio)
            ->setParameter('fechaFinal', $fechaFinal)
            ->setParameter('cliente', $cliente)
            ->setParameter('extra', $extra);

        return $qb->getQuery()->getResult();
    }

    public function findByFechaAndPresupuestoExtra($fechaInicio, $fechaFinal, $presupuesto, $extra)
    {
        $em = $this->getEntityManager();
        $qb = $em->createQueryBuilder();
        $qb
            ->select('registro')
            ->from('AppBundle:RegistroHoras', 'registro')
            ->Where('registro.fechaHoras >= :fechaInicio')
            ->andWhere('registro.fechaHoras <= :fechaFinal')
            ->andWhere('registro.proyectoPresupuesto = :proyectoPresupuesto')
            ->andWhere('registro.horasExtraordinarias = :extra')
            ->setParameter('fechaInicio', $fechaInicio)
            ->setParameter('fechaFinal', $fechaFinal)
            ->setParameter('proyectoPresupuesto', $presupuesto)
            ->setParameter('extra', $extra);

        return $qb->getQuery()->getResult();
    }


    public function findByAreaAndProyectoCosto($area, $proyecto)
    {
        $em = $this->getEntityManager();
        $qb = $em->createQueryBuilder();
        $qb
            ->select('act.nombre as actividad')
            ->addSelect('u.nombre')
            ->addSelect('u.apellidos')
            ->addSelect('c.razonSocial as cliente')
            ->addSelect('r.fechaHoras')
            ->addSelect('r.horasInvertidas')
            ->addSelect('costo.costo')
            ->from('AppBundle:RegistroHoras', 'r')
            ->innerJoin('AppBundle:Actividad', 'act', 'with', 'act.id = r.actividad')
            ->innerJoin('AppBundle:Area', 'a', 'with', 'a.id = act.area')
            ->innerJoin('AppBundle:ProyectoPresupuesto', 'p', 'with', 'p.id = r.proyectoPresupuesto')
            ->innerJoin('AppBundle:Cliente', 'c', 'with', 'r.cliente = c.id')
            ->innerJoin('UserBundle:Usuario', 'u', 'with', 'u.id = r.ingresadoPor')
            ->innerJoin('CostoBundle:Costo', 'costo', 'with', 'costo.usuario = u.id')
            ->where('a.id = :area_id')
            ->andWhere('p.id = :proyecto_id')
            ->andWhere($qb->expr()->andX(
               $qb->expr()->lte('costo.fechaInicio', 'r.fechaHoras'),
               $qb->expr()->gte('costo.fechaFinal', 'r.fechaHoras')
            ))
            ->groupBy('r.id')
            ->setParameter('area_id', $area)
            ->setParameter('proyecto_id', $proyecto);
        return $qb->getQuery()->getResult();
    }
}
